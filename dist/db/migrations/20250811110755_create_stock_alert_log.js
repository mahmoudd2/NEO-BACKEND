"use strict";

exports.up = async knex => {
  await knex.schema.createTable('Stock', t => {
    t.increments('id').primary();
    t.integer('ProductID').notNullable().references('id').inTable('Product').onDelete('CASCADE');
    t.integer('WarehouseID').notNullable().references('id').inTable('Warehouse');
    t.integer('Quantity').notNullable().checkPositive();
    t.date('ExpiryDate').notNullable();
    t.string('BatchNum', 100).notNullable();
    t.string('LocCode', 100).notNullable();
    t.timestamp('last_updated').notNullable().defaultTo(knex.fn.now());
  });
  await knex.schema.createTable('Alert', t => {
    t.increments('id').primary();
    t.integer('ProductID').notNullable().references('id').inTable('Product').onDelete('CASCADE');
    t.integer('StockID').notNullable().references('id').inTable('Stock').onDelete('CASCADE');
    t.integer('WarehouseID').notNullable().references('id').inTable('Warehouse');
    t.string('Type', 50).notNullable();
    t.string('Channel', 50).notNullable();
    t.timestamp('TriggeredAt').notNullable().defaultTo(knex.fn.now());
    t.boolean('Resolved').defaultTo(false);
  });
  await knex.schema.createTable('Log', t => {
    t.increments('id').primary();
    t.integer('UserID').notNullable().references('id').inTable('UserAccount');
    t.string('Action', 100).notNullable();
    t.integer('ObjectID').notNullable();
    t.string('ObjectType', 100).notNullable();
    t.timestamp('Timestamp').notNullable().defaultTo(knex.fn.now());
    t.jsonb('gps_location');
    t.text('Note');
  });
};
exports.down = async knex => {
  await knex.schema.dropTableIfExists('Log');
  await knex.schema.dropTableIfExists('Alert');
  await knex.schema.dropTableIfExists('Stock');
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHBvcnRzIiwidXAiLCJrbmV4Iiwic2NoZW1hIiwiY3JlYXRlVGFibGUiLCJ0IiwiaW5jcmVtZW50cyIsInByaW1hcnkiLCJpbnRlZ2VyIiwibm90TnVsbGFibGUiLCJyZWZlcmVuY2VzIiwiaW5UYWJsZSIsIm9uRGVsZXRlIiwiY2hlY2tQb3NpdGl2ZSIsImRhdGUiLCJzdHJpbmciLCJ0aW1lc3RhbXAiLCJkZWZhdWx0VG8iLCJmbiIsIm5vdyIsImJvb2xlYW4iLCJqc29uYiIsInRleHQiLCJkb3duIiwiZHJvcFRhYmxlSWZFeGlzdHMiXSwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvZGIvbWlncmF0aW9ucy8yMDI1MDgxMTExMDc1NV9jcmVhdGVfc3RvY2tfYWxlcnRfbG9nLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydHMudXAgPSBhc3luYyAoa25leCkgPT4ge1xuICBhd2FpdCBrbmV4LnNjaGVtYS5jcmVhdGVUYWJsZSgnU3RvY2snLCAodCkgPT4ge1xuICAgIHQuaW5jcmVtZW50cygnaWQnKS5wcmltYXJ5KCk7XG4gICAgdC5pbnRlZ2VyKCdQcm9kdWN0SUQnKS5ub3ROdWxsYWJsZSgpLnJlZmVyZW5jZXMoJ2lkJykuaW5UYWJsZSgnUHJvZHVjdCcpLm9uRGVsZXRlKCdDQVNDQURFJyk7XG4gICAgdC5pbnRlZ2VyKCdXYXJlaG91c2VJRCcpLm5vdE51bGxhYmxlKCkucmVmZXJlbmNlcygnaWQnKS5pblRhYmxlKCdXYXJlaG91c2UnKTtcbiAgICB0LmludGVnZXIoJ1F1YW50aXR5Jykubm90TnVsbGFibGUoKS5jaGVja1Bvc2l0aXZlKCk7XG4gICAgdC5kYXRlKCdFeHBpcnlEYXRlJykubm90TnVsbGFibGUoKTtcbiAgICB0LnN0cmluZygnQmF0Y2hOdW0nLCAxMDApLm5vdE51bGxhYmxlKCk7XG4gICAgdC5zdHJpbmcoJ0xvY0NvZGUnLCAxMDApLm5vdE51bGxhYmxlKCk7XG4gICAgdC50aW1lc3RhbXAoJ2xhc3RfdXBkYXRlZCcpLm5vdE51bGxhYmxlKCkuZGVmYXVsdFRvKGtuZXguZm4ubm93KCkpO1xuICB9KTtcblxuICBhd2FpdCBrbmV4LnNjaGVtYS5jcmVhdGVUYWJsZSgnQWxlcnQnLCAodCkgPT4ge1xuICAgIHQuaW5jcmVtZW50cygnaWQnKS5wcmltYXJ5KCk7XG4gICAgdC5pbnRlZ2VyKCdQcm9kdWN0SUQnKS5ub3ROdWxsYWJsZSgpLnJlZmVyZW5jZXMoJ2lkJykuaW5UYWJsZSgnUHJvZHVjdCcpLm9uRGVsZXRlKCdDQVNDQURFJyk7XG4gICAgdC5pbnRlZ2VyKCdTdG9ja0lEJykubm90TnVsbGFibGUoKS5yZWZlcmVuY2VzKCdpZCcpLmluVGFibGUoJ1N0b2NrJykub25EZWxldGUoJ0NBU0NBREUnKTtcbiAgICB0LmludGVnZXIoJ1dhcmVob3VzZUlEJykubm90TnVsbGFibGUoKS5yZWZlcmVuY2VzKCdpZCcpLmluVGFibGUoJ1dhcmVob3VzZScpO1xuICAgIHQuc3RyaW5nKCdUeXBlJywgNTApLm5vdE51bGxhYmxlKCk7XG4gICAgdC5zdHJpbmcoJ0NoYW5uZWwnLCA1MCkubm90TnVsbGFibGUoKTtcbiAgICB0LnRpbWVzdGFtcCgnVHJpZ2dlcmVkQXQnKS5ub3ROdWxsYWJsZSgpLmRlZmF1bHRUbyhrbmV4LmZuLm5vdygpKTtcbiAgICB0LmJvb2xlYW4oJ1Jlc29sdmVkJykuZGVmYXVsdFRvKGZhbHNlKTtcbiAgfSk7XG5cbiAgYXdhaXQga25leC5zY2hlbWEuY3JlYXRlVGFibGUoJ0xvZycsICh0KSA9PiB7XG4gICAgdC5pbmNyZW1lbnRzKCdpZCcpLnByaW1hcnkoKTtcbiAgICB0LmludGVnZXIoJ1VzZXJJRCcpLm5vdE51bGxhYmxlKCkucmVmZXJlbmNlcygnaWQnKS5pblRhYmxlKCdVc2VyQWNjb3VudCcpO1xuICAgIHQuc3RyaW5nKCdBY3Rpb24nLCAxMDApLm5vdE51bGxhYmxlKCk7XG4gICAgdC5pbnRlZ2VyKCdPYmplY3RJRCcpLm5vdE51bGxhYmxlKCk7XG4gICAgdC5zdHJpbmcoJ09iamVjdFR5cGUnLCAxMDApLm5vdE51bGxhYmxlKCk7XG4gICAgdC50aW1lc3RhbXAoJ1RpbWVzdGFtcCcpLm5vdE51bGxhYmxlKCkuZGVmYXVsdFRvKGtuZXguZm4ubm93KCkpO1xuICAgIHQuanNvbmIoJ2dwc19sb2NhdGlvbicpO1xuICAgIHQudGV4dCgnTm90ZScpO1xuICB9KTtcbn07XG5cbmV4cG9ydHMuZG93biA9IGFzeW5jIChrbmV4KSA9PiB7XG4gIGF3YWl0IGtuZXguc2NoZW1hLmRyb3BUYWJsZUlmRXhpc3RzKCdMb2cnKTtcbiAgYXdhaXQga25leC5zY2hlbWEuZHJvcFRhYmxlSWZFeGlzdHMoJ0FsZXJ0Jyk7XG4gIGF3YWl0IGtuZXguc2NoZW1hLmRyb3BUYWJsZUlmRXhpc3RzKCdTdG9jaycpO1xufTtcbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsT0FBTyxDQUFDQyxFQUFFLEdBQUcsTUFBT0MsSUFBSSxJQUFLO0VBQzNCLE1BQU1BLElBQUksQ0FBQ0MsTUFBTSxDQUFDQyxXQUFXLENBQUMsT0FBTyxFQUFHQyxDQUFDLElBQUs7SUFDNUNBLENBQUMsQ0FBQ0MsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDQyxPQUFPLENBQUMsQ0FBQztJQUM1QkYsQ0FBQyxDQUFDRyxPQUFPLENBQUMsV0FBVyxDQUFDLENBQUNDLFdBQVcsQ0FBQyxDQUFDLENBQUNDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQ0MsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDQyxRQUFRLENBQUMsU0FBUyxDQUFDO0lBQzVGUCxDQUFDLENBQUNHLE9BQU8sQ0FBQyxhQUFhLENBQUMsQ0FBQ0MsV0FBVyxDQUFDLENBQUMsQ0FBQ0MsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDQyxPQUFPLENBQUMsV0FBVyxDQUFDO0lBQzVFTixDQUFDLENBQUNHLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQ0MsV0FBVyxDQUFDLENBQUMsQ0FBQ0ksYUFBYSxDQUFDLENBQUM7SUFDbkRSLENBQUMsQ0FBQ1MsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDTCxXQUFXLENBQUMsQ0FBQztJQUNsQ0osQ0FBQyxDQUFDVSxNQUFNLENBQUMsVUFBVSxFQUFFLEdBQUcsQ0FBQyxDQUFDTixXQUFXLENBQUMsQ0FBQztJQUN2Q0osQ0FBQyxDQUFDVSxNQUFNLENBQUMsU0FBUyxFQUFFLEdBQUcsQ0FBQyxDQUFDTixXQUFXLENBQUMsQ0FBQztJQUN0Q0osQ0FBQyxDQUFDVyxTQUFTLENBQUMsY0FBYyxDQUFDLENBQUNQLFdBQVcsQ0FBQyxDQUFDLENBQUNRLFNBQVMsQ0FBQ2YsSUFBSSxDQUFDZ0IsRUFBRSxDQUFDQyxHQUFHLENBQUMsQ0FBQyxDQUFDO0VBQ3BFLENBQUMsQ0FBQztFQUVGLE1BQU1qQixJQUFJLENBQUNDLE1BQU0sQ0FBQ0MsV0FBVyxDQUFDLE9BQU8sRUFBR0MsQ0FBQyxJQUFLO0lBQzVDQSxDQUFDLENBQUNDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQ0MsT0FBTyxDQUFDLENBQUM7SUFDNUJGLENBQUMsQ0FBQ0csT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDQyxXQUFXLENBQUMsQ0FBQyxDQUFDQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUNDLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQ0MsUUFBUSxDQUFDLFNBQVMsQ0FBQztJQUM1RlAsQ0FBQyxDQUFDRyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUNDLFdBQVcsQ0FBQyxDQUFDLENBQUNDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQ0MsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDQyxRQUFRLENBQUMsU0FBUyxDQUFDO0lBQ3hGUCxDQUFDLENBQUNHLE9BQU8sQ0FBQyxhQUFhLENBQUMsQ0FBQ0MsV0FBVyxDQUFDLENBQUMsQ0FBQ0MsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDQyxPQUFPLENBQUMsV0FBVyxDQUFDO0lBQzVFTixDQUFDLENBQUNVLE1BQU0sQ0FBQyxNQUFNLEVBQUUsRUFBRSxDQUFDLENBQUNOLFdBQVcsQ0FBQyxDQUFDO0lBQ2xDSixDQUFDLENBQUNVLE1BQU0sQ0FBQyxTQUFTLEVBQUUsRUFBRSxDQUFDLENBQUNOLFdBQVcsQ0FBQyxDQUFDO0lBQ3JDSixDQUFDLENBQUNXLFNBQVMsQ0FBQyxhQUFhLENBQUMsQ0FBQ1AsV0FBVyxDQUFDLENBQUMsQ0FBQ1EsU0FBUyxDQUFDZixJQUFJLENBQUNnQixFQUFFLENBQUNDLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDakVkLENBQUMsQ0FBQ2UsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDSCxTQUFTLENBQUMsS0FBSyxDQUFDO0VBQ3hDLENBQUMsQ0FBQztFQUVGLE1BQU1mLElBQUksQ0FBQ0MsTUFBTSxDQUFDQyxXQUFXLENBQUMsS0FBSyxFQUFHQyxDQUFDLElBQUs7SUFDMUNBLENBQUMsQ0FBQ0MsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDQyxPQUFPLENBQUMsQ0FBQztJQUM1QkYsQ0FBQyxDQUFDRyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUNDLFdBQVcsQ0FBQyxDQUFDLENBQUNDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQ0MsT0FBTyxDQUFDLGFBQWEsQ0FBQztJQUN6RU4sQ0FBQyxDQUFDVSxNQUFNLENBQUMsUUFBUSxFQUFFLEdBQUcsQ0FBQyxDQUFDTixXQUFXLENBQUMsQ0FBQztJQUNyQ0osQ0FBQyxDQUFDRyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUNDLFdBQVcsQ0FBQyxDQUFDO0lBQ25DSixDQUFDLENBQUNVLE1BQU0sQ0FBQyxZQUFZLEVBQUUsR0FBRyxDQUFDLENBQUNOLFdBQVcsQ0FBQyxDQUFDO0lBQ3pDSixDQUFDLENBQUNXLFNBQVMsQ0FBQyxXQUFXLENBQUMsQ0FBQ1AsV0FBVyxDQUFDLENBQUMsQ0FBQ1EsU0FBUyxDQUFDZixJQUFJLENBQUNnQixFQUFFLENBQUNDLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDL0RkLENBQUMsQ0FBQ2dCLEtBQUssQ0FBQyxjQUFjLENBQUM7SUFDdkJoQixDQUFDLENBQUNpQixJQUFJLENBQUMsTUFBTSxDQUFDO0VBQ2hCLENBQUMsQ0FBQztBQUNKLENBQUM7QUFFRHRCLE9BQU8sQ0FBQ3VCLElBQUksR0FBRyxNQUFPckIsSUFBSSxJQUFLO0VBQzdCLE1BQU1BLElBQUksQ0FBQ0MsTUFBTSxDQUFDcUIsaUJBQWlCLENBQUMsS0FBSyxDQUFDO0VBQzFDLE1BQU10QixJQUFJLENBQUNDLE1BQU0sQ0FBQ3FCLGlCQUFpQixDQUFDLE9BQU8sQ0FBQztFQUM1QyxNQUFNdEIsSUFBSSxDQUFDQyxNQUFNLENBQUNxQixpQkFBaUIsQ0FBQyxPQUFPLENBQUM7QUFDOUMsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==