"use strict";

const jwt = require('jsonwebtoken');
const bcrypt = require('bcryptjs');
const db = require('../../config/knex');
exports.login = async (req, res) => {
  const {
    email,
    password
  } = req.body;
  try {
    // Find user
    const user = await db('UserAccount').where({
      Email: email
    }).first();
    if (!user) {
      return res.status(401).json({
        message: 'Invalid credentials'
      });
    }

    // Check password
    const validPassword = await bcrypt.compare(password, user.Password);
    if (!validPassword) {
      return res.status(401).json({
        message: 'Invalid credentials'
      });
    }

    // Get role name
    const role = await db('Role').where({
      id: user.RoleID
    }).first();

    // Create token
    const token = jwt.sign({
      id: user.id,
      email: user.Email,
      role: role.Name
    }, process.env.JWT_SECRET, {
      expiresIn: process.env.JWT_EXPIRES_IN || '1d'
    });
    res.json({
      token,
      role: role.Name
    });
  } catch (err) {
    console.error(err);
    res.status(500).json({
      message: 'Server error'
    });
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJqd3QiLCJyZXF1aXJlIiwiYmNyeXB0IiwiZGIiLCJleHBvcnRzIiwibG9naW4iLCJyZXEiLCJyZXMiLCJlbWFpbCIsInBhc3N3b3JkIiwiYm9keSIsInVzZXIiLCJ3aGVyZSIsIkVtYWlsIiwiZmlyc3QiLCJzdGF0dXMiLCJqc29uIiwibWVzc2FnZSIsInZhbGlkUGFzc3dvcmQiLCJjb21wYXJlIiwiUGFzc3dvcmQiLCJyb2xlIiwiaWQiLCJSb2xlSUQiLCJ0b2tlbiIsInNpZ24iLCJOYW1lIiwicHJvY2VzcyIsImVudiIsIkpXVF9TRUNSRVQiLCJleHBpcmVzSW4iLCJKV1RfRVhQSVJFU19JTiIsImVyciIsImNvbnNvbGUiLCJlcnJvciJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9tb2R1bGVzL2F1dGgvY29udHJvbGxlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBqd3QgPSByZXF1aXJlKCdqc29ud2VidG9rZW4nKTtcclxuY29uc3QgYmNyeXB0ID0gcmVxdWlyZSgnYmNyeXB0anMnKTtcclxuY29uc3QgZGIgPSByZXF1aXJlKCcuLi8uLi9jb25maWcva25leCcpO1xyXG5cclxuZXhwb3J0cy5sb2dpbiA9IGFzeW5jIChyZXEsIHJlcykgPT4ge1xyXG4gIGNvbnN0IHsgZW1haWwsIHBhc3N3b3JkIH0gPSByZXEuYm9keTtcclxuXHJcbiAgdHJ5IHtcclxuICAgIC8vIEZpbmQgdXNlclxyXG4gICAgY29uc3QgdXNlciA9IGF3YWl0IGRiKCdVc2VyQWNjb3VudCcpLndoZXJlKHsgRW1haWw6IGVtYWlsIH0pLmZpcnN0KCk7XHJcblxyXG4gICAgaWYgKCF1c2VyKSB7XHJcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMSkuanNvbih7IG1lc3NhZ2U6ICdJbnZhbGlkIGNyZWRlbnRpYWxzJyB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBDaGVjayBwYXNzd29yZFxyXG4gICAgY29uc3QgdmFsaWRQYXNzd29yZCA9IGF3YWl0IGJjcnlwdC5jb21wYXJlKHBhc3N3b3JkLCB1c2VyLlBhc3N3b3JkKTtcclxuICAgIGlmICghdmFsaWRQYXNzd29yZCkge1xyXG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLmpzb24oeyBtZXNzYWdlOiAnSW52YWxpZCBjcmVkZW50aWFscycgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gR2V0IHJvbGUgbmFtZVxyXG4gICAgY29uc3Qgcm9sZSA9IGF3YWl0IGRiKCdSb2xlJykud2hlcmUoeyBpZDogdXNlci5Sb2xlSUQgfSkuZmlyc3QoKTtcclxuXHJcbiAgICAvLyBDcmVhdGUgdG9rZW5cclxuICAgIGNvbnN0IHRva2VuID0gand0LnNpZ24oXHJcbiAgICAgIHsgaWQ6IHVzZXIuaWQsIGVtYWlsOiB1c2VyLkVtYWlsLCByb2xlOiByb2xlLk5hbWUgfSxcclxuICAgICAgcHJvY2Vzcy5lbnYuSldUX1NFQ1JFVCxcclxuICAgICAgeyBleHBpcmVzSW46IHByb2Nlc3MuZW52LkpXVF9FWFBJUkVTX0lOIHx8ICcxZCcgfVxyXG4gICAgKTtcclxuXHJcbiAgICByZXMuanNvbih7IHRva2VuLCByb2xlOiByb2xlLk5hbWUgfSk7XHJcbiAgfSBjYXRjaCAoZXJyKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKGVycik7XHJcbiAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7IG1lc3NhZ2U6ICdTZXJ2ZXIgZXJyb3InIH0pO1xyXG4gIH1cclxufTtcclxuIl0sIm1hcHBpbmdzIjoiOztBQUFBLE1BQU1BLEdBQUcsR0FBR0MsT0FBTyxDQUFDLGNBQWMsQ0FBQztBQUNuQyxNQUFNQyxNQUFNLEdBQUdELE9BQU8sQ0FBQyxVQUFVLENBQUM7QUFDbEMsTUFBTUUsRUFBRSxHQUFHRixPQUFPLENBQUMsbUJBQW1CLENBQUM7QUFFdkNHLE9BQU8sQ0FBQ0MsS0FBSyxHQUFHLE9BQU9DLEdBQUcsRUFBRUMsR0FBRyxLQUFLO0VBQ2xDLE1BQU07SUFBRUMsS0FBSztJQUFFQztFQUFTLENBQUMsR0FBR0gsR0FBRyxDQUFDSSxJQUFJO0VBRXBDLElBQUk7SUFDRjtJQUNBLE1BQU1DLElBQUksR0FBRyxNQUFNUixFQUFFLENBQUMsYUFBYSxDQUFDLENBQUNTLEtBQUssQ0FBQztNQUFFQyxLQUFLLEVBQUVMO0lBQU0sQ0FBQyxDQUFDLENBQUNNLEtBQUssQ0FBQyxDQUFDO0lBRXBFLElBQUksQ0FBQ0gsSUFBSSxFQUFFO01BQ1QsT0FBT0osR0FBRyxDQUFDUSxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUNDLElBQUksQ0FBQztRQUFFQyxPQUFPLEVBQUU7TUFBc0IsQ0FBQyxDQUFDO0lBQ2pFOztJQUVBO0lBQ0EsTUFBTUMsYUFBYSxHQUFHLE1BQU1oQixNQUFNLENBQUNpQixPQUFPLENBQUNWLFFBQVEsRUFBRUUsSUFBSSxDQUFDUyxRQUFRLENBQUM7SUFDbkUsSUFBSSxDQUFDRixhQUFhLEVBQUU7TUFDbEIsT0FBT1gsR0FBRyxDQUFDUSxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUNDLElBQUksQ0FBQztRQUFFQyxPQUFPLEVBQUU7TUFBc0IsQ0FBQyxDQUFDO0lBQ2pFOztJQUVBO0lBQ0EsTUFBTUksSUFBSSxHQUFHLE1BQU1sQixFQUFFLENBQUMsTUFBTSxDQUFDLENBQUNTLEtBQUssQ0FBQztNQUFFVSxFQUFFLEVBQUVYLElBQUksQ0FBQ1k7SUFBTyxDQUFDLENBQUMsQ0FBQ1QsS0FBSyxDQUFDLENBQUM7O0lBRWhFO0lBQ0EsTUFBTVUsS0FBSyxHQUFHeEIsR0FBRyxDQUFDeUIsSUFBSSxDQUNwQjtNQUFFSCxFQUFFLEVBQUVYLElBQUksQ0FBQ1csRUFBRTtNQUFFZCxLQUFLLEVBQUVHLElBQUksQ0FBQ0UsS0FBSztNQUFFUSxJQUFJLEVBQUVBLElBQUksQ0FBQ0s7SUFBSyxDQUFDLEVBQ25EQyxPQUFPLENBQUNDLEdBQUcsQ0FBQ0MsVUFBVSxFQUN0QjtNQUFFQyxTQUFTLEVBQUVILE9BQU8sQ0FBQ0MsR0FBRyxDQUFDRyxjQUFjLElBQUk7SUFBSyxDQUNsRCxDQUFDO0lBRUR4QixHQUFHLENBQUNTLElBQUksQ0FBQztNQUFFUSxLQUFLO01BQUVILElBQUksRUFBRUEsSUFBSSxDQUFDSztJQUFLLENBQUMsQ0FBQztFQUN0QyxDQUFDLENBQUMsT0FBT00sR0FBRyxFQUFFO0lBQ1pDLE9BQU8sQ0FBQ0MsS0FBSyxDQUFDRixHQUFHLENBQUM7SUFDbEJ6QixHQUFHLENBQUNRLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQ0MsSUFBSSxDQUFDO01BQUVDLE9BQU8sRUFBRTtJQUFlLENBQUMsQ0FBQztFQUNuRDtBQUNGLENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=